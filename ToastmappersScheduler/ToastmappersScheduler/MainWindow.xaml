<Window x:Class="Toastmappers.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:self="clr"
        xmlns:local="clr-namespace:Toastmappers" 
        Loaded="Window_Loaded" 
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Icon="./Resources/logo.png"
  Title="Club Scheduler" Height="650" Width="1000">

  <Window.InputBindings>
    <KeyBinding Modifiers="Ctrl" Key="B" Command="{Binding BackupCmd}" />
  </Window.InputBindings>
  <Window.Resources>
    <local:MeetingTemplateSelector x:Key="meetingTemplateSelector"/>
    <BooleanToVisibilityConverter x:Key="Bool2Vis" />
    <local:InverseBoolConverter x:Key="InverseBool" />
    <!--<Style x:Key="Style1" TargetType="{x:Type ListBoxItem}">
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <Border BorderBrush="Black" BorderThickness="1" Margin="1">
              <StackPanel Orientation="Horizontal">
                -->
    <!--<Button x:Name="Delete" Width="20" Visibility="Hidden" />-->
    <!--
                <Button x:Name="Delete" FontFamily="Segoe MDL2 Assets" FontSize="18" Content="&#xE74D;" HorizontalAlignment="Left"  VerticalAlignment="Top" Visibility="Hidden"
                        CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteCmd}"/>
                <TextBlock Text="{Binding }" Width="120" VerticalAlignment="Center"/>
              </StackPanel>
            </Border>
            <DataTemplate.Triggers>
              <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Visibility" TargetName="Delete" Value="Visible"/>
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="Style2" TargetType="ListBoxItem" BasedOn="{StaticResource Style1}"/>-->
    <DataTemplate x:Key="AttendeeTemplate">
      <TextBlock Text="{Binding }"/>
    </DataTemplate>
    <DataTemplate x:Key="FirstThreeTemplate">
      <Grid Margin="5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Text="Meeting date"/>
        <TextBox IsEnabled="False" Grid.Row="0" Grid.Column="1"  Text="{Binding DayOfMeeting}"/>
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Theme"/>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Theme}"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Word of the Day"/>
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding WOTD}"/>
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
          <TextBlock  Text="Attendees" HorizontalAlignment="Center"/>
          <ComboBox Name="AttendeesCombo" ItemsSource="{Binding AttendeesMembersList}" DropDownClosed="ComboBox_DropDownClosed" />
          <ListBox ItemsSource="{Binding Attendees}" >
            <ListBox.ItemTemplate >
              <DataTemplate>
                <Border BorderBrush="Black" BorderThickness="1" Margin="1">
                  <StackPanel Orientation="Horizontal">
                    <!--<Button x:Name="Delete" Width="20" Visibility="Hidden" />-->
                    <Button x:Name="Delete" FontFamily="Segoe MDL2 Assets" FontSize="18" Content="&#xE74D;" HorizontalAlignment="Left"  VerticalAlignment="Top" Visibility="Hidden"
                        CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteAttendeeCmd}"/>
                    <TextBlock Text="{Binding }" Width="120" VerticalAlignment="Center"/>
                  </StackPanel>
                </Border>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter Property="Visibility" TargetName="Delete" Value="Visible"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </StackPanel>
        <StackPanel Grid.Row="4" Grid.ColumnSpan="2">
          <TextBlock Text="Guests" HorizontalAlignment="Center"/>
          <!--<DockPanel LastChildFill="True">-->
          <!--<Button DockPanel.Dock="Right" Height="16" Width="16">
              <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="12" Text="&#xE710;" FontWeight="Bold" HorizontalAlignment="Left"  VerticalAlignment="Top"  />
            </Button>-->
          <TextBox Name="GuestTextBox"/>
          <!--</DockPanel>-->
          <ListBox ItemsSource="{Binding Guests}" >
            <ListBox.ItemTemplate >
              <DataTemplate>
                <Border BorderBrush="Black" BorderThickness="1" Margin="1">
                  <StackPanel Orientation="Horizontal">
                    <!--<Button x:Name="Delete" Width="20" Visibility="Hidden" />-->
                    <Button x:Name="Delete" FontFamily="Segoe MDL2 Assets" FontSize="18" Content="&#xE74D;" HorizontalAlignment="Left"  VerticalAlignment="Top" Visibility="Hidden"
                        CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteGuestCmd}"/>
                    <TextBlock Text="{Binding }" Width="120" VerticalAlignment="Center"/>
                  </StackPanel>
                </Border>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter Property="Visibility" TargetName="Delete" Value="Visible"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </StackPanel>
        <!--<StackPanel>
        <TextBlock Text="Meeting date"/>
        <TextBox Text="{Binding CurrentMeetingToResolve.DayOfMeeting}"/>
        <TextBlock  Text="Theme"/>
        <TextBox Text="{Binding CurrentMeetingToResolve.Theme}"/>
        <TextBlock Text="Word of the Day"/>
        <TextBox Text="{Binding CurrentMeetingToResolve.WOTD}"/>
      </StackPanel>-->
      </Grid>
    </DataTemplate>
    <DataTemplate x:Key="RegularMeetingTemplate">
      <Grid Margin="5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
          <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0"  Text="Toastmaster"/>
        <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Toastmaster}"/>
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Speaker 1"/>
        <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Speaker1}"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Speaker 2"/>
        <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Speaker2}"/>
        <TextBlock Grid.Row="3" Grid.Column="0" Text="General Evaluator"/>
        <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding GeneralEvaluator}"/>
        <TextBlock Grid.Row="4" Grid.Column="0" Text="Evaluator 1"/>
        <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Evaluator1}" />
        <TextBlock Grid.Row="5" Grid.Column="0" Text="Evaluator 2"/>
        <ComboBox Grid.Row="5" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Evaluator2}" />
        <TextBlock Grid.Row="6" Grid.Column="0" Text="Table Topics Master"/>
        <ComboBox Grid.Row="6" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding TableTopics}" />
        <TextBlock Grid.Row="7" Grid.Column="0" Text="Ah Counter"/>
        <ComboBox Grid.Row="7" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding AhCounter}" />
        <TextBlock Grid.Row="8" Grid.Column="0" Text="Timer"/>
        <ComboBox Grid.Row="8" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding Timer}" />
        <TextBlock Grid.Row="9" Grid.Column="0" Text="Grammarian"/>
        <ComboBox Grid.Row="9" Grid.Column="1" ItemsSource="{Binding MembersList}" SelectedValue="{Binding Grammarian}"  />
        <TextBlock Grid.Row="10" Grid.Column="0" Text="Quiz Master"/>
        <ComboBox Grid.Row="10" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding QuizMaster}" />
        <TextBlock Grid.Row="11" Grid.Column="0" Text="Video"/>
        <ComboBox Grid.Row="11" Grid.Column="1" ItemsSource="{Binding MembersList}" SelectedValue="{Binding Video}"  />
        <TextBlock Grid.Row="12" Grid.Column="0" Text="Hot Seat"/>
        <ComboBox Grid.Row="12" Grid.Column="1" ItemsSource="{Binding MembersList}"  SelectedValue="{Binding HotSeat}" />
        <TextBlock Grid.Row="13" Grid.Column="0" Text="Table Topics Winner"/>
        <ComboBox Grid.Row="13" Grid.Column="1" Name="TTWinner_Combobox" ItemsSource="{Binding MembersList}" SelectedValue="{Binding TTWinner}" IsEditable="True" 
                  Text="{Binding TTWinner, Mode=TwoWay}"/>
        <TextBlock Grid.Row="14" Grid.Column="0" Text="Table Topic Contestants"/>
        <StackPanel Grid.Row="14" Grid.Column="1" >
          <ComboBox Name="TTContestants_ComboBox" IsEditable="True" ItemsSource="{Binding TTContestantMembersList}" DropDownClosed="TTContestants_ComboBox_DropDownClosed"/>
          <ListBox ItemsSource="{Binding TTContestants}" Height="100">
            <ListBox.ItemTemplate >
              <DataTemplate>
                <Border BorderBrush="Black" BorderThickness="1" Margin="1">
                  <StackPanel Orientation="Horizontal">
                    <!--<Button x:Name="Delete" Width="20" Visibility="Hidden" />-->
                    <Button x:Name="Delete" FontFamily="Segoe MDL2 Assets" FontSize="18" Content="&#xE74D;" HorizontalAlignment="Left"  VerticalAlignment="Top" Visibility="Hidden"
                        CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteContestantCmd}"/>
                    <TextBlock Text="{Binding }" Width="120" VerticalAlignment="Center"/>
                  </StackPanel>
                </Border>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter Property="Visibility" TargetName="Delete" Value="Visible"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </StackPanel>
      </Grid>
    </DataTemplate>
    <!--<DataTemplate x:Key="RegularTemplate">
      <DataGrid ItemsSource="{Binding Meetings}" AutoGenerateColumns="False" >
        <DataGrid.LayoutTransform>
          <TransformGroup>
            <RotateTransform Angle="90"/>
            <MatrixTransform Matrix="-1,0,0,1,0,0"></MatrixTransform>
          </TransformGroup>
        </DataGrid.LayoutTransform>
        <DataGrid.ColumnHeaderStyle>
          <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
            <Setter Property="LayoutTransform">
              <Setter.Value>
                <TransformGroup>
                  <RotateTransform Angle="-90"/>
                  <ScaleTransform ScaleX="1" ScaleY="-1"/>
                </TransformGroup>
              </Setter.Value>
            </Setter>
          </Style>
        </DataGrid.ColumnHeaderStyle>
        <DataGrid.CellStyle>
          <Style TargetType="DataGridCell">
            <Setter Property="LayoutTransform">
              <Setter.Value>
                <TransformGroup>
                  <RotateTransform Angle="-90"/>
                  <ScaleTransform ScaleX="1" ScaleY="-1"/>
                </TransformGroup>
              </Setter.Value>
            </Setter>
          </Style>
        </DataGrid.CellStyle>
        <DataGrid.Columns>
          <DataGridTextColumn Header="DayOfMeeting" Binding="{Binding Path=DayOfMeeting, StringFormat=d}"/>
          <DataGridTextColumn Header="Toastmaster" Binding="{Binding Path=Toastmaster.Name}"/>
          <DataGridTextColumn Header="Speaker 1" Binding="{Binding Path=Speaker1.Name}"/>
          <DataGridTextColumn Header="Speaker 2" Binding="{Binding Path=Speaker2.Name}"/>
          <DataGridTextColumn Header="GE" Binding="{Binding Path=GeneralEvaluator.Name}"/>
          <DataGridTextColumn Header="Evaluator 1" Binding="{Binding Path=Evaluator1.Name}"/>
          <DataGridTextColumn Header="Evaluator 2" Binding="{Binding Path=Evaluator2.Name}"/>
          <DataGridTextColumn Header="TT" Binding="{Binding Path=TT.Name}"/>
          <DataGridTextColumn Header="Ah" Binding="{Binding Path=Ah.Name}"/>
          <DataGridTextColumn Header="Gram" Binding="{Binding Path=Gram.Name}"/>
          <DataGridTextColumn Header="Timer" Binding="{Binding Path=Timer.Name}"/>
          <DataGridTextColumn Header="Quiz" Binding="{Binding Path=Quiz.Name}"/>
          <DataGridTextColumn Header="Video" Binding="{Binding Path=Video.Name}"/>
          <DataGridTextColumn Header="HotSeat" Binding="{Binding Path=HotSeat.Name}"/>
          -->
    <!--public List
              <int>Attendees { get; set; }
    public MemberModel TTWinner { get; set; }
    public List
                <int>TTContestants { get; set; }-->
    <!--<DataGridTextColumn Header="Day of Meeting"/>-->
    <!--
        </DataGrid.Columns>
      </DataGrid>
    </DataTemplate>-->
    <DataTemplate x:Key="MemberInfo">
      <StackPanel>
        <CheckBox Content="Is Current" IsChecked="{Binding CurrentMemberEdit.IsCurrent, Mode=TwoWay}"/>
        <CheckBox Content="Can be Toastmaster" IsChecked="{Binding CurrentMemberEdit.CanBeToastmaster, Mode=TwoWay}"/>
        <CheckBox Content="Can be Evaluator" IsChecked="{Binding CurrentMemberEdit.CanBeEvaluator, Mode=TwoWay}"/>
        <!--<CheckBox Content="Is Current" IsChecked="{Binding IsCurrent, Mode=TwoWay}"/>
      <CheckBox Content="Is Current" IsChecked="{Binding IsCurrent, Mode=TwoWay}"/>-->
      </StackPanel>
    </DataTemplate>
    <!--<Style x:Key="MentorListStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Stretch"/>
      <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
      --><!--Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/--><!--
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      --><!--<EventSetter Event="PreviewMouseWheel" Handler="HandlePreviewMouseWheel"/>-->
      <!--<Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Grid Margin="0,1,0,1" Focusable="False" Background="Transparent">
              <Grid.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="Remove" Command="{Binding Path=DataContext.OnDel,RelativeSource={RelativeSource TemplatedParent}}"/>
                  -->
      <!--<MenuItem Header="{x:Static res:Resources.common_MoveUp}" Command="{Binding Path=DataContext.OnUp,RelativeSource={RelativeSource TemplatedParent}}"/>
                  <MenuItem Header="{x:Static res:Resources.common_MoveDown}" Command="{Binding Path=DataContext.OnDown,RelativeSource={RelativeSource TemplatedParent}}"/>
                  <MenuItem Header="{x:Static res:Resources.common_RemoveAll}" Command="{Binding Path=DataContext.OnDelAll,RelativeSource={RelativeSource TemplatedParent}}"/>-->
      <!--<MenuItem Header="Remove" Command="{Binding Path=OnDel}"/>-->
      <!--
                </ContextMenu>
              </Grid.ContextMenu>
              <Rectangle Fill="{TemplateBinding Background}" Width="5" HorizontalAlignment="Left">
                -->
      <!--<Rectangle.ToolTip>
                  -->
      <!--<TextBlock Style="{StaticResource rowIDTextStyle}"/>-->
      <!--
                </Rectangle.ToolTip>-->
      <!--
              </Rectangle>
              <Button Name="btRm" Command="{Binding Path=DataContext.OnDel,RelativeSource={RelativeSource TemplatedParent}}"
                  Focusable="False" Width="14" Height="14" CommandParameter="{Binding}"
                  Margin="0" Padding="0"
                  ToolTip="Remove"
                  VerticalAlignment="Center" HorizontalAlignment="Left"
                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                  BorderThickness="0" Content="X"
                  Visibility="Hidden">
                -->
      <!--<Image Margin="0" Width="12" Height="12" Source="{StaticResource GenericDeleteRed16}" />-->
      <!--
              </Button>
              -->
      <!-- <ContentPresenter IsHitTestVisible="False" ContentTemplate="{StaticResource IndexColumnTemplate}" Width="8" HorizontalAlignment="Left"/> 
                   IsEnabled="{Binding Path=DataContext.IsValueEnabled,RelativeSource={RelativeSource TemplatedParent}}"
              -->
      <!--<ContentPresenter Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  PreviewMouseDown="HandlePreviewMouseDown"/>-->
      <!--
            </Grid>
            <ControlTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  -->
      <!--<Condition Property="Selector.IsSelected" Value="True"/>-->
      <!--
                  <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="btRm" Property="Visibility" Value="Visible"/>
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>--><!--
      <Style.Triggers>
        --><!--<Trigger Property="Selector.IsSelected" Value="True">
          <Setter Property="Background" Value="{DynamicResource Esri_Blue6}" />
        </Trigger>-->
        <!-- IsKeyboardFocusWithin
        <Trigger Property="Selector.IsSelectionActive" Value="False">
          <Setter Property="Background" Value="{DynamicResource Esri_Gray100}" />
        </Trigger>--><!--
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="Selector.IsSelected" Value="True"/>
            <Condition Property="Selector.IsSelectionActive" Value="False"/>
          </MultiTrigger.Conditions>
          <Setter Property="Background" Value="Gray"/>
        </MultiTrigger>

        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="Blue" />
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="IsMouseOver" Value="True"/>
            <Condition Property="Selector.IsSelected" Value="True"/>
          </MultiTrigger.Conditions>
          <Setter Property="Background" Value="Blue"/>
        </MultiTrigger>
      </Style.Triggers>

    </Style>-->
  </Window.Resources>
  <DockPanel>

    <TabControl TabStripPlacement="Left" Margin="0,0,0,5"  >
      <TabControl.Resources>
        <Style TargetType="TabItem">
          <!--<Style.Triggers>
            <Trigger Property="TabItem.IsSelected" Value="True">
              <Setter Property="Foreground" Value="Red"/>
              <Setter Property="FontSize" Value="18"/>
            </Trigger>
          </Style.Triggers>-->
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="TabItem">
                <Grid Name="Panel">
                  <ContentPresenter x:Name="ContentSite"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  ContentSource="Header"
                                  Margin="10,6" />
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue"/>
                  </Trigger>
                  <Trigger Property="IsSelected" Value="False">
                    <Setter TargetName="Panel" Property="Background" Value="White"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Panel" Property="Background" Value="lightblue"/>
                  </Trigger>
                  <!--<Trigger Property="IsSelected" Value="False">
                    <Setter TargetName="Panel" Property="Background" Value="White"/>
                  </Trigger>-->
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </TabControl.Resources>
      <TabItem Name="General" Padding="15" DataContext="{Binding Tabs[0]}">
        <TabItem.Header>
          <TextBlock Text="General" FontSize="20"/>
        </TabItem.Header>
        <!--<Button Margin="10" Width="100" Height="25" HorizontalAlignment="Left" >New Member</Button>-->
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Image Grid.Row="1" Width="300" Source="pack://application:,,,/Resources/logo.png"/>


          <StackPanel Grid.Row="2" VerticalAlignment="Center" >
            <TextBlock FontSize="30" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Toastmappers Scheduler" />
            <TextBlock FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Version 0.2" />
          </StackPanel>

        </Grid>
      </TabItem>
      <TabItem Name="Members" DataContext="{Binding Tabs[1]}" Height="38" VerticalAlignment="Top">
        <TabItem.Header>
          <TextBlock Text="Members" FontSize="20"/>
        </TabItem.Header>
        <StackPanel Background="Transparent">
          <TextBlock Text="Member Information" Margin="10,10,10,10"/>
          <DockPanel HorizontalAlignment="Left" LastChildFill="False">
            <ComboBox Name="MemberInfoComboBox" Margin="10" Width="150" Height="25" HorizontalAlignment="Left" 
                    ItemsSource="{Binding Members}" DisplayMemberPath="Name" 
                      SelectedValue="{Binding SetMemberRoleStatus}" DropDownClosed="ComboBox_DropDownClosed"/>
            <Button Name="MoveMember" Content="Move To Past Members" Margin="10" Width="150" Height="25" Command="{Binding MoveToPastMembersCmd}"
                    IsEnabled="{Binding MemberSet}"/>
            <Button Margin="10" Width="100" Height="25" HorizontalAlignment="Left" Content="New Member" 
                    Command="{Binding NewMemberCmd}"/>
            <Button Margin="10" Width="100" Height="25" Content="Save" Command="{Binding SaveMembersCmd}"/>
            <!--<Button Margin="10" Width="100" Height="25" Content="Backup" Command="{Binding BackupCmd}"/>-->

          </DockPanel>
          <!--members vm-->
          <TabControl Background="Transparent">
            <TabItem  Header="General" Padding="5">
              <StackPanel Background="Transparent">

                <DockPanel HorizontalAlignment="Left" LastChildFill="False">
                  <!--<ComboBox Margin="10" Width="150" Height="25" HorizontalAlignment="Left" 
                    ItemsSource="{Binding Members}" DisplayMemberPath="Name" SelectedValuePath="Name"
                      SelectedValue="{Binding MemberToEdit}"/>-->

                  <!--<Button Margin="10" Width="100" Height="25" HorizontalAlignment="Left" Command="{Binding EditMemberCmd}">Edit Member</Button>-->
                </DockPanel>
                <StackPanel Width="600" HorizontalAlignment="Left" Height="300">
                  <DockPanel HorizontalAlignment="Left" Width="600" LastChildFill="True">
                    <StackPanel Margin="10,10,0,0" Width="180">
                      <CheckBox Content="Is Current" IsChecked="{Binding SetMemberRoleStatus.IsCurrent, Mode=TwoWay}" IsEnabled="{Binding MemberSet}"/>
                      <CheckBox Content="Can be Toastmaster" IsChecked="{Binding SetMemberRoleStatus.CanBeToastmaster, Mode=TwoWay}" IsEnabled="{Binding MemberSet}"/>
                      <CheckBox Content="Can Be Evaluator" IsChecked="{Binding SetMemberRoleStatus.CanBeEvaluator, Mode=TwoWay}" IsEnabled="{Binding MemberSet}"/>
                      <CheckBox Content="Has been an officer" IsChecked="{Binding SetMemberRoleStatus.HasBeenOfficer}" IsEnabled="{Binding MemberSet}" />
                      <DockPanel LastChildFill="True">
                        <TextBlock Text="Member ID" Width="70"/>
                        <TextBox Text="{Binding SetMemberRoleStatus.ID}"/>
                      </DockPanel>
                      <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
                        <TextBlock  Text="Mentors" HorizontalAlignment="Center"/>
                        <ComboBox Name="MentorsCombo" ItemsSource="{Binding MemberNames}" DropDownClosed="MentorsCombo_DropDownClosed"/>

                        <ListBox x:Name="newMemberListBox" ItemsSource="{Binding SetMemberRoleStatus.Mentors}" Height="45">
                          <ListBox.ItemTemplate >
                            <DataTemplate>
                              <Border BorderBrush="Black" BorderThickness="1" Margin="1">
                                <StackPanel Orientation="Horizontal">
                                  <!--<Button x:Name="Delete" Width="20" Visibility="Hidden" />-->
                                  <Button x:Name="Delete" FontFamily="Segoe MDL2 Assets" FontSize="18" Content="&#xE74D;" HorizontalAlignment="Left"  VerticalAlignment="Top" Visibility="Hidden"
                       CommandParameter="{Binding}" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}, Path=DataContext.DeleteMentorCmd}"/>
                                  <TextBlock Text="{Binding }" Width="120" VerticalAlignment="Center"/>
                                </StackPanel>
                              </Border>
                              <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                  <Setter Property="Visibility" TargetName="Delete" Value="Visible"/>
                                </DataTrigger>
                              </DataTemplate.Triggers>
                            </DataTemplate>
                          </ListBox.ItemTemplate>
                        </ListBox>
                        
                        
                        <!--<ListBox ItemsSource="{Binding SetMemberRoleStatus.Mentors}">
                          <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                              <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                              <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                              <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                              --><!--Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}"/--><!--
                              <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                              --><!--<EventSetter Event="PreviewMouseWheel" Handler="HandlePreviewMouseWheel"/>--><!--
                              <Setter Property="Template">
                                <Setter.Value>
                                  <ControlTemplate TargetType="ListBoxItem">
                                    <Grid Margin="0,1,0,1" Focusable="False" Background="Transparent">
                                      <Grid.ContextMenu>
                                        <ContextMenu>
                                          <MenuItem Header="Remove" Command="{Binding Path=DataContext.OnDel,RelativeSource={RelativeSource TemplatedParent}}"/>

                                          <MenuItem Header="MoveUp" Command="{Binding Path=DataContext.OnUp,RelativeSource={RelativeSource TemplatedParent}}"/>
                                          <MenuItem Header="MoveDown" Command="{Binding Path=DataContext.OnDown,RelativeSource={RelativeSource TemplatedParent}}"/>
                                          <MenuItem Header="RemoveAll" Command="{Binding Path=DataContext.OnDelAll,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        </ContextMenu>
                                      </Grid.ContextMenu>
                                      <Rectangle Fill="{TemplateBinding Background}" Width="5" HorizontalAlignment="Left">

                                        <Rectangle.ToolTip>

                                          <TextBlock />

                                        </Rectangle.ToolTip>

                                      </Rectangle>
                                      <Button Name="btRm" Command="{Binding Path=DataContext.OnDel,RelativeSource={RelativeSource TemplatedParent}}"
                  Focusable="False" Width="14" Height="14" CommandParameter="{Binding}"
                  Margin="0" Padding="0"
                  ToolTip="Remove"
                  VerticalAlignment="Center" HorizontalAlignment="Left"
                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                  BorderThickness="0" Content="X"
                  Visibility="Hidden">


                                      </Button>

                                      <ContentPresenter IsHitTestVisible="False" Width="8" HorizontalAlignment="Left"/>


                                      <ContentPresenter Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  />

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                      <MultiTrigger>
                                        <MultiTrigger.Conditions>

                                          <Condition Property="Selector.IsSelected" Value="True"/>

                                          <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="btRm" Property="Visibility" Value="Visible"/>
                                      </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                  </ControlTemplate>
                                </Setter.Value>
                              </Setter>
                              <Style.Triggers>
                                --><!--<Trigger Property="Selector.IsSelected" Value="True">
          <Setter Property="Background" Value="{DynamicResource Esri_Blue6}" />
        </Trigger>-->
                                <!-- IsKeyboardFocusWithin
        <Trigger Property="Selector.IsSelectionActive" Value="False">
          <Setter Property="Background" Value="{DynamicResource Esri_Gray100}" />
        </Trigger>--><!--
                                <MultiTrigger>
                                  <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                  </MultiTrigger.Conditions>
                                  <Setter Property="Background" Value="Gray"/>
                                </MultiTrigger>

                                <Trigger Property="IsMouseOver" Value="True">
                                  <Setter Property="Background" Value="Blue" />
                                </Trigger>
                                <MultiTrigger>
                                  <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="Selector.IsSelected" Value="True"/>
                                  </MultiTrigger.Conditions>
                                  <Setter Property="Background" Value="Blue"/>
                                </MultiTrigger>
                              </Style.Triggers>

                            </Style>
                          </ListBox.ItemContainerStyle>

                        </ListBox>-->
                      </StackPanel>
                    </StackPanel>
                    <StackPanel Width="200" HorizontalAlignment="Left">
                      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                        <TextBlock Text="Meetings Out" Padding="10,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Button Width="50" Content="Clear" Click="Button_Click" IsEnabled="{Binding MemberSet}" />
                        <Button Width="50" Margin="5,0,0,0" Content="Clear All" Click="Button_ClearAll" />

                      </StackPanel>
                      <Calendar Name="MeetingsOutCalendar" SelectionMode="MultipleRange" DisplayDateStart="" SelectedDatesChanged="Calendar_SelectedDatesChanged"
                                IsTodayHighlighted="False" IsEnabled="{Binding MemberSet}" PreviewMouseUp="MeetingsOutCalendar_PreviewMouseUp"
                                >
                      </Calendar>



                    </StackPanel>
                    <StackPanel>
                      <ComboBox Name="MeetingRoles" ItemsSource="{Binding Roles}" SelectionChanged="ComboBox_SelectionChanged"/>
                      <ListBox Height="150" Name="MeetingRoleList"/>
                    </StackPanel>
                  </DockPanel>
                </StackPanel>

              </StackPanel>
            </TabItem>
            <TabItem Header="Role History" Padding="5" HorizontalAlignment="Left" Width="84">
              <StackPanel Width="600" HorizontalAlignment="Left" Background="Transparent">
                <!--<DockPanel HorizontalAlignment="Left" LastChildFill="False">-->

                <!--<ListBox ItemsSource="{Binding Roles}" Width="80" ></ListBox>-->
                <WrapPanel >
                  <TextBlock  Width="100" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Text="Toastmaster"/>
                  <DatePicker  SelectedDate="{Binding SetMemberRoleStatus.Toastmaster}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Toastmaster" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="Speaker"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.Speaker}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Speaker" />
                </WrapPanel>

                <WrapPanel >
                  <TextBlock  Width="100" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Text="Evaluator"/>
                  <DatePicker  SelectedDate="{Binding SetMemberRoleStatus.Evaluator}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Evaluator" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="General Evaluator"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.GeneralEvaluator}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="GeneralEvaluator" />
                </WrapPanel>

                <WrapPanel >
                  <TextBlock  Width="100" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Text="Table Topics"/>
                  <DatePicker  SelectedDate="{Binding SetMemberRoleStatus.TT}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="TableTopics" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="Ah Counter"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.Ah}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="AhCounter" />
                </WrapPanel>

                <WrapPanel >
                  <TextBlock  Width="100" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Text="Timer"/>
                  <DatePicker  SelectedDate="{Binding SetMemberRoleStatus.Timer}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Timer" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="Grammarian"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.Gram}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Grammarian" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="Quiz Master"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.Quiz}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="QuizMaster" />
                </WrapPanel>

                <WrapPanel >
                  <TextBlock  Width="100" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Text="Video"/>
                  <DatePicker  SelectedDate="{Binding SetMemberRoleStatus.Video}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="Video" />
                </WrapPanel>

                <WrapPanel>
                  <TextBlock Width="100" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" Text="Hot Seat"/>
                  <DatePicker SelectedDate="{Binding SetMemberRoleStatus.HotSeat}" Width="100" Margin="10,0,0,0"/>
                  <Button Margin="7,0,0,0" Width="92" Content="Set To Last Date" Command="{Binding SetLastRoleCmd}" CommandParameter="HotSeat" />
                </WrapPanel>

                <!--<Button Width="50" Margin="20,10,0,0" HorizontalAlignment="Left" Content="Save"/>-->
              </StackPanel>
            </TabItem>
            <TabItem Header="Speech History" Padding="7">

            </TabItem>

            <TabItem Header="Past Members" Padding="7">
              <ListBox Height="150" Name="PastMembersListBox" ItemsSource="{Binding PastMembers}" DisplayMemberPath="Name"/>
            </TabItem>
          </TabControl>
        </StackPanel>
      </TabItem>
      <!--<TabItem Name="Members" Header="Members">
        <FlowDocumentScrollViewer>
          <FlowDocument>
            <Paragraph FontSize="14" Margin="0">Members</Paragraph>
            <Paragraph FontStyle="Normal" TextAlignment="Left" FontSize="14" Foreground="Black">List of Members</Paragraph>
            <ButtonBase>
              
            </ButtonBase>
            <BlockUIContainer>
              <ListView BorderThickness="0" ItemsSource="{Binding Scheduler.Member}">
                <ListView.View>
                  <GridView>
                    <GridViewColumn Header="Member" DisplayMemberBinding="{Binding Name}" Width="150"/>
                    <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" Width="75"/>
                  </GridView>
                </ListView.View>
              </ListView>
            </BlockUIContainer>
          </FlowDocument>
        </FlowDocumentScrollViewer>
      </TabItem>-->
      <TabItem Name="Meetings" DataContext="{Binding Tabs[2]}" Margin="-2,0,0,-4">
        <TabItem.Header>
          <TextBlock Text="Meetings" FontSize="20"/>
        </TabItem.Header>

        <Grid Background="Transparent">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="69*"/>
            <RowDefinition Height="515*"/>
          </Grid.RowDefinitions>
          <TextBlock Margin="10" FontSize="14">Meetings</TextBlock>
          <StackPanel Grid.Row="1">
            <DockPanel  HorizontalAlignment="Center" LastChildFill="False">
              <!--<ComboBox ItemsSource="{Binding MeetingTemplates, Mode=OneWay}" SelectedValue="{Binding MeetingTemplate, Mode=TwoWay}"
                      SelectedValuePath="Key" DisplayMemberPath="Value" Width="150" Height="26"
                      SelectedValuePath="Key" DisplayMemberPath="Value" Width="150" Height="26"
                      IsSynchronizedWithCurrentItem="True" SelectedIndex="0"
                      />-->
              <ComboBox DockPanel.Dock="Left" Margin="10,0,0,0" ItemsSource="{Binding MeetingTemplates}" SelectedIndex="0" SelectedItem="{Binding MeetingTemplate}"/>
              <DatePicker DockPanel.Dock="Left" SelectedDate="{Binding MeetingDate, Mode=TwoWay}" Margin="20, 0,0,0" IsEnabled="{Binding IsGenerateForMonth}"/>
              <CheckBox DockPanel.Dock="Left" Margin="20,5,0,0" IsChecked="{Binding GenerateForMonth, Mode=TwoWay}" Content="Generate for the month"/>
              <CheckBox DockPanel.Dock="Left" Margin="20,5,0,0" IsChecked="{Binding GenerateForFriday, Mode=TwoWay}" Content="Generate for last Friday" IsEnabled="{Binding IsGenerateForMonth, Converter={StaticResource InverseBool}}"/>
              <ComboBox DockPanel.Dock="Left" Margin="10,0,0,0" ItemsSource="{Binding Months}" SelectedIndex="0" SelectedItem="{Binding MonthToGenerateFor}" IsEnabled="{Binding IsGenerateForMonth, Converter={StaticResource InverseBool}}"/>
              <DatePicker DockPanel.Dock="Left" SelectedDate="{Binding MeetingDateMonth, Mode=TwoWay}" Margin="20, 0,0,0"
                        IsEnabled="{Binding IsGenerateForMonth, Converter={StaticResource InverseBool}}" Visibility="Collapsed"/>
            </DockPanel>
            <DockPanel HorizontalAlignment="Center" LastChildFill="False">
              <Button Margin="10" Width="130" Height="25" HorizontalAlignment="Left" Command="{Binding GenerateMeetingCmd}" Content="Generate Meeting" 
                  IsEnabled="{Binding GenerateButtonEnabled}"/>
              <Button Name="resetBtn" Content="Reset" Command="{Binding ResetCmd}"
                    Margin="10" Width="70" Height="25" IsEnabled="{Binding ResetButtonEnabled}" />
              <Button Name="clearBtn" Content="Clear" Command="{Binding ClearCmd}"
                    Margin="10" Width="70" Height="25" IsEnabled="{Binding ResetButtonEnabled}" />
              <Button Name="okBtn" Content="Save" Command="{Binding OKCmd}"
                    Margin="10" Width="70" Height="25"  />
            </DockPanel>
          </StackPanel>
          <!--<DockPanel LastChildFill="False" HorizontalAlignment="Left">-->
          <!--<ListBox Name="lstHeader" DockPanel.Dock="Left" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch"
                     ItemsSource="{Binding CurrentMeetingTemplate}" Visibility="{Binding RoleListVisible, Converter={StaticResource Bool2Vis}}"/>


            <ListBox Name="lstRoles" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" 
                     ItemsSource="{Binding CurrentMeeting}" Visibility="{Binding RoleListVisible, Converter={StaticResource Bool2Vis}}"/>

            -->
          <!--<ListBox.ItemTemplate>
                <DataTemplate>
                  <ComboBox Name="cmbRole" SelectedValue="{Binding FK_ServiceID,Mode=TwoWay}" ItemsSource="{Binding ElementName=wndMain, Path=DataContext.AllServices,Mode=OneTime}"  SelectedValuePath="ID" DisplayMemberPath="Name"  Grid.Column="0" ></ComboBox>

                </DataTemplate>
              </ListBox.ItemTemplate>-->
          <!--

          </DockPanel>-->

          <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"></RowDefinition>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <!--<ListBox Grid.Row="0" Template="{StaticResource FirstThreeTemplate}"/>-->
            <!--<ContentControl Grid.Row="1" Template="{StaticResource RegularMeetingTemplate}" Content="{Binding CurrentMeetingToResolve}"/>-->
            <Grid Grid.Row="0" Grid.Column="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="73*"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="34*"/>
              </Grid.ColumnDefinitions>
              <ContentControl ContentTemplate="{StaticResource FirstThreeTemplate}" Content="{Binding CurrentMeeting}" VerticalAlignment="Center" Grid.ColumnSpan="3"/>
            </Grid>
            <Grid Grid.Row="0" Grid.Column="1">
              <ContentControl Content="{Binding CurrentMeeting}" ContentTemplateSelector="{StaticResource meetingTemplateSelector}"/>
            </Grid>
            <!--<DataGrid ItemsSource="{Binding CurrentMeeting}" AutoGenerateColumns="False" Visibility="Visible">
            <DataGrid.LayoutTransform>
              <TransformGroup>
                <RotateTransform Angle="90"/>
                <MatrixTransform Matrix="-1,0,0,1,0,0"></MatrixTransform>
              </TransformGroup>
            </DataGrid.LayoutTransform>
            <DataGrid.ColumnHeaderStyle>
              <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                <Setter Property="LayoutTransform">
                  <Setter.Value>
                    <TransformGroup>
                      <RotateTransform Angle="-90"/>
                      <ScaleTransform ScaleX="1" ScaleY="-1"/>
                    </TransformGroup>
                  </Setter.Value>
                </Setter>
              </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="LayoutTransform">
                  <Setter.Value>
                    <TransformGroup>
                      <RotateTransform Angle="-90"/>
                      <ScaleTransform ScaleX="1" ScaleY="-1"/>
                    </TransformGroup>
                  </Setter.Value>
                </Setter>
              </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
              <DataGridTextColumn Header="DayOfMeeting" Binding="{Binding Path=DayOfMeeting, StringFormat=d}"/>
              <DataGridTextColumn Header="Toastmaster" Binding="{Binding Path=Toastmaster.Name}"/>
              <DataGridTextColumn Header="Speaker 1" Binding="{Binding Path=Speaker1.Name}"/>
              <DataGridTextColumn Header="Speaker 2" Binding="{Binding Path=Speaker2.Name}"/>
              <DataGridTextColumn Header="GE" Binding="{Binding Path=GeneralEvaluator.Name}"/>
              <DataGridTextColumn Header="Evaluator 1" Binding="{Binding Path=Evaluator1.Name}"/>
              <DataGridTextColumn Header="Evaluator 2" Binding="{Binding Path=Evaluator2.Name}"/>
              <DataGridTextColumn Header="TT" Binding="{Binding Path=TT.Name}"/>
              <DataGridTextColumn Header="Ah" Binding="{Binding Path=Ah.Name}"/>
              <DataGridTextColumn Header="Gram" Binding="{Binding Path=Gram.Name}"/>
              <DataGridTextColumn Header="Timer" Binding="{Binding Path=Timer.Name}"/>
              <DataGridTextColumn Header="Quiz" Binding="{Binding Path=Quiz.Name}"/>
              <DataGridTextColumn Header="Video" Binding="{Binding Path=Video.Name}"/>
              <DataGridTextColumn Header="HotSeat" Binding="{Binding Path=HotSeat.Name}"/>
              <DataGridTextColumn Header="Day of Meeting"/>

            </DataGrid.Columns>
          </DataGrid>-->
          </Grid>
          <StackPanel HorizontalAlignment="Center" Grid.ColumnSpan="2" Grid.Row="2" VerticalAlignment="Bottom"  Orientation="Horizontal" >
            <Button FontFamily="Segoe MDL2 Assets" FontSize="20" Content="&#xE76B;" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Command="{Binding PreviousMeetingCmd}"/>
            <Button FontFamily="Segoe MDL2 Assets" FontSize="20" Content="&#xE76C;" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Command="{Binding NextMeetingCmd}" />
            <!--<Button Content="Save" FontSize="16" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="75" Command="{Binding SaveMeetingCmd}"/>-->
          </StackPanel>

        </Grid>

      </TabItem>
      <TabItem Name="Agendas" DataContext="{Binding Tabs[2]}" Margin="-2,0,0,-4">
        <TabItem.Header>
          <TextBlock Text="Agendas" FontSize="20"/>
        </TabItem.Header>
        <Button Margin="20,10,0,0" HorizontalAlignment="Left" Width="35" Height="25" Content="Print" Command="{Binding PrintMeetingsCmd}"/>
      </TabItem>
      <TabItem Name="Reports"  DataContext="{Binding Tabs[3]}" Margin="-2,2,0,-2">
        <TabItem.Header>
          <TextBlock Text="Reports" FontSize="20"/>
        </TabItem.Header>
        <StackPanel Background="Transparent">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition/>
            </Grid.ColumnDefinitions>


            <StackPanel>
              <DockPanel HorizontalAlignment="Left" LastChildFill="False">
                <TextBlock Text="Member" Margin="10" FontSize="14"/>
                <ComboBox Name="Foo" Margin="10" Width="150" Height="25" HorizontalAlignment="Left" 
                    ItemsSource="{Binding Members}" DisplayMemberPath="Name" 
                      SelectedValue="{Binding SetMemberRoleStatus}" />
              </DockPanel>
              <CheckBox Content="Toastmaster" IsChecked="{Binding Toastmaster}"/>
              <CheckBox Content="Speaker" IsChecked="{Binding Speaker}" />
              <CheckBox Content="Evaluator" IsChecked="{Binding Evaluator}"/>
              <CheckBox Content="General Evaluator" IsChecked="{Binding GeneralEvaluator}"/>
              <CheckBox Content="Table Topics Master" IsChecked="{Binding TableTopics}"/>
              <CheckBox Content="Ah Counter" IsChecked="{Binding AhCounter}"/>
              <CheckBox Content="Timer" IsChecked="{Binding Timer}"/>
              <CheckBox Content="Grammarian" IsChecked="{Binding Grammarian}"/>
              <CheckBox Content="Quiz Master" IsChecked="{Binding QuizMaster}"/>
              <CheckBox Content="Videographer" IsChecked="{Binding Video}"/>
              <CheckBox Content="Hot Seat" IsChecked="{Binding HotSeat}"/>

              <Button Margin="20,10,0,0" HorizontalAlignment="Left" Width="35" Content="Find" Command="{Binding FindPastRolesCmd}"/>
            </StackPanel>
            <ListBox Grid.Column="1" ItemsSource="{Binding FindResults}">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <Expander Grid.Column="1" Header="{Binding Item1}" >
                    <ListBox Height="100" ItemsSource="{Binding Item2}"/>
                  </Expander>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>

            <!--<TreeView Margin="10" Grid.Column="1" ItemsSource="{Binding Results}" >-->

            <!--</TreeView>-->
          </Grid>
          <DockPanel HorizontalAlignment="Left" LastChildFill="False">
            <Button Margin="10" Width="130" Height="25" HorizontalAlignment="Left" Command="{Binding GenerateReportCmd}" Content="Generate Schedule"/>
          </DockPanel>
        </StackPanel>

        <!--<StackPanel>

        </StackPanel>-->
      </TabItem>

      <TabItem Name="Test">
        <TabItem.Header>
          <TextBlock Text="Test" FontSize="20"/>
        </TabItem.Header>

      </TabItem>
    </TabControl>
  </DockPanel>

</Window>
